import { Observable, Subject } from 'rxjs';
import { RouterStub } from './router.stub';
import { ParamMap, Params, Router } from '@angular/router';
import * as i0 from "@angular/core";
/**
 * 路由测试桩
 */
export declare class ActivatedRouteStub {
    router: RouterStub;
    paramsSubject: Subject<Params>;
    params: Observable<Params>;
    paramMapSubject: Subject<ParamMap>;
    paramMap: Observable<ParamMap>;
    queryParamsSubject: Subject<Params>;
    queryParams: Observable<Params>;
    queryParamMapSubject: Subject<ParamMap>;
    queryParamsMap: Observable<ParamMap>;
    snapshot: {
        paramMap: {
            get: () => number;
        };
    };
    /**
     * 当有新路由参数时，弹出ActivationEnd事件，供在服务中通过Router获取全局路由信息
     * 比如：实现回退功能时，需要对每个路由信息进行缓存
     * @param router 路由
     */
    constructor(router: Router);
    static ɵfac: i0.ɵɵFactoryDeclaration<ActivatedRouteStub, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ActivatedRouteStub>;
}
export declare class ParamMapImpl implements ParamMap {
    readonly keys: string[];
    readonly values: {
        [key: string]: string | string[];
    };
    get(name: string): string | null;
    getAll(name: string): string[];
    has(name: string): boolean;
    constructor(values: {
        [key: string]: string | string[];
    });
}
