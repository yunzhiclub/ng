import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';
import { Observable } from 'rxjs';
import { Type } from '@angular/core';
import { MockApiInterface } from './mock-api.interface';
/**
 * 模拟拦截器.
 */
export declare class MockApiInterceptor implements HttpInterceptor {
    /**
     * 此静态变量应该变到构造函数中初始化.
     * 区别：
     * 1. 属性初始化：其它文件import本文件时执行
     * 2. 构造函数：实例化时执行
     */
    private static mockApiService;
    /**
     * 启动时注册API
     * @param mockApis 模拟API
     */
    static forRoot(mockApis: Type<MockApiInterface>[]): Type<HttpInterceptor>;
    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;
}
